#setting the "%matlibplot notebook" at the beginning of Juypter editor, you can add recursive features or new data into graphs

-------------------------


%matplotlib notebook
import matplotlib.pyplot as plt


plt.plot(5, 5, 'o')
plt.show()

plt.ylabel("Y")
plt.xlabel("X")
plt.title("Plotting Example")


-------------- 
kinds of visual graphs are represented as "(example_data_df.plot(kind="line")"  = line plot 

or 
kinds of visual graphs are represented as "(example_data_df("column_name").plot(kind="hist")"   = histogram 

Data sets involving immigration to Canada 

rows and columns / metadata / Data -> Pandas Dataframing

import numpy as np #scientific computing
import pandas as pd #data structuring
from _future_ import print_function # compatability to python 2

$pip install xlrd #xlrd is a library for reading data and formatting information from Excel files in the historical .xls format.


##https://domohelp.domo.com/hc/en-us/articles/360043931814-Fun-Sample-DataSets
#here we are reading the excel sheet using pandas  

df_can = pd.read_excel(
    r"C:\Users\q9077\Downloads\2021_Revenue.xlsx",
    engine="openpyxl",
    sheet_name="2021 Revenue",
    skiprows=range(20),
    skipfooter = 0)
    
    #show top line of data 
   
    df_can.head()



##The usecols parameter allows you to select which columns to use:


a = pd.read_table("file", header=None, sep=" ", usecols=range(8))


  
 try:
--> 465     data = io.parse(
    466         sheet_name=sheet_name,
    467         header=header,
    468         names=names,
    469         index_col=index_col,
    470         usecols=usecols,
    471         squeeze=squeeze,
    472         dtype=dtype,
    473         converters=converters,
    474         true_values=true_values,
    475         false_values=false_values,
    476         skiprows=skiprows,
    477         nrows=nrows,
    478         na_values=na_values,
    479         keep_default_na=keep_default_na,
    480         na_filter=na_filter,
    481         verbose=verbose,
    482         parse_dates=parse_dates,
    483         date_parser=date_parser,
    484         thousands=thousands,
    485         decimal=decimal,
    486         comment=comment,
    487         skipfooter=skipfooter,
    488         convert_float=convert_float,
    489         mangle_dupe_cols=mangle_dupe_cols,
    490     )
